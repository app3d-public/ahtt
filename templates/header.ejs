#include <acul/string/string.hpp>
#include <acul/string/sstream.hpp>

namespace templates
{
    namespace <%= namespace %>
    {
<%_ if (variables.length > 0) { _%>
        struct Data {
<%_   variables.forEach(varName => { _%>
            const char* <%= varName %>;
<%_   }); _%>
        };
<%_ } _%>
<%_ if (!extendPath && blocks.length > 0) { _%>
        struct BlockContext {
<%_   blocks.forEach(block => { _%>
            void(*<%= block.value %>)(acul::stringstream&<% if (variables.length > 0) { %>, const Data& data<% } %>);
<%_   }); _%>
        };
        acul::string render(const BlockContext& ctx<% if (variables.length > 0) { %>, const Data& data<% } %>);
<%_ } else { _%>
        acul::string render(<% if (variables.length > 0) { %>const Data& data<% } %>);
<%_ } _%>
    } // namespace <%= namespace %>
} // namespace templates
